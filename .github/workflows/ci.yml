name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly Sunday midnight

jobs:
  test:
    name: Test on ${{ matrix.os }} with Node ${{ matrix.node }} and Python ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [18, 20, 21]
        python: ['3.9', '3.10', '3.11']
        exclude:
          # Reduce matrix size by excluding some combinations
          - os: windows-latest
            node: 18
            python: '3.9'
          - os: macos-latest
            node: 18
            python: '3.9'

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js ${{ matrix.node }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}
        cache: 'npm'

    - name: Setup Python ${{ matrix.python }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}
        cache: 'pip'

    - name: Install Node dependencies
      run: npm ci

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov flake8 black

    - name: Run linting
      run: |
        npm run lint || true
        flake8 src/python --max-line-length=120 || true
        black src/python --check || true

    - name: Build TypeScript
      run: npm run build

    - name: Run TypeScript tests
      run: npm test -- --coverage --passWithNoTests
      env:
        CI: true

    - name: Run Python tests
      run: |
        pytest src/python/test_vector_engine.py --cov=src/python --cov-report=xml || true
      continue-on-error: true

    - name: Test MCP server startup
      run: |
        timeout 10 npm start || true
      if: matrix.os != 'windows-latest'
      continue-on-error: true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      if: matrix.os == 'ubuntu-latest' && matrix.node == '20' && matrix.python == '3.11'
      with:
        files: ./coverage/lcov.info,./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v5
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        npm ci
        pip install -r requirements.txt

    - name: Build
      run: npm run build

    - name: Run integration tests
      run: |
        node test-system.js
      continue-on-error: true

    - name: Test Docker build
      run: |
        docker build -t mvmemory-test .
        docker run --rm mvmemory-test echo "Docker test successful"
      continue-on-error: true

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      security-events: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: javascript, python

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

    - name: Run npm audit
      run: |
        npm audit --audit-level=moderate || true
      continue-on-error: true

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
      continue-on-error: true

  performance:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v5
    
    - name: Setup environment
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        npm ci
        pip install -r requirements.txt

    - name: Build
      run: npm run build

    - name: Run benchmarks
      run: |
        npm run benchmark || echo "No benchmarks configured yet"
      continue-on-error: true

    - name: Store benchmark result
      uses: benchmark-action/github-action-benchmark@v1
      with:
        tool: 'customBiggerIsBetter'
        output-file-path: benchmark-results.json
        github-token: ${{ secrets.GITHUB_TOKEN }}
        auto-push: false
      continue-on-error: true